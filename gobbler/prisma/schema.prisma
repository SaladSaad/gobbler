// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  image String?
  email String? @unique //optional bc can log in with oauth
  emailVerified DateTime?
  hashedPassword String? //same reason as above
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteTV String[] @db.ObjectId
  favoriteAlbums String[] @db.ObjectId
  favoriteBooks String[] @db.ObjectId
  favoriteGames String[] @db.ObjectId
  sessions Session[]
  accounts Account[]
}

//used for oauth accounts.
model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  //create relation between account and user using userid
  user User @relation(fields:[userId], references:[id], onDelete:Cascade)
  @@unique([provider, providerAccountId])
}


model Session{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  sessionToken String @unique
  expires DateTime

  user User @relation(fields:[userId], references:[id], onDelete:Cascade)
}

model VerificationToken{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}